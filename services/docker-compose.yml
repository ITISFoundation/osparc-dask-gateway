version: '3.6' # Don't touch
services:
  osparc-gateway-server:
    image: ${DOCKER_REGISTRY:-itisfoundation}/osparc-gateway-server:${DOCKER_IMAGE_TAG:-latest}
    ports:
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - gateway_data:/mnt/gateway
    networks:
      - dask_net
    environment:
      - GATEWAY_WORK_FOLDER=/mnt/gateway
      - GATEWAY_VOLUME_NAME=${SWARM_STACK_NAME:?swarm_stack_name_required}_gateway_data
      - GATEWAY_WORKERS_NETWORK=dask_net
      - GATEWAY_SERVER_NAME=${SWARM_STACK_NAME:?swarm_stack_name_required}_osparc-gateway-server
      - COMPUTATIONAL_SIDECAR_IMAGE=${COMPUTATIONAL_SIDECAR_IMAGE:-local/dask-sidecar:production}
      - COMPUTATIONAL_SIDECAR_LOG_LEVEL=${COMPUTATIONAL_SIDECAR_LOG_LEVEL:-WARNING}
  # portainer:
  #   image: portainer/portainer-ce
  #   ports:
  #     - "9000:9000"
  #   command: -H unix:///var/run/docker.sock
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - portainer_data:/data

  # volume-sync:
  #   image: mguidon/osparc-volume-sync:production
  #   restart: always
  #   volumes:
  #     - gateway_data:/volumes/sync
  #   networks:
  #     - volume-sync
  #   environment:
  #     LOG_LEVEL: DEBUG
  #     HOSTNAME: volume-sync
  #     SYNC_FOLDER: /volumes/sync
  #     SYNC_INTERVAL: 3
  #     SYNC_TIMEOUT: 0
  #     SYNC_TYPE: ALL
  #     WAIT_PERIOD: 1
  #   deploy:
  #     mode: global
  #     endpoint_mode: dnsrr

networks:
  dask_net: null
  volume-sync:
    driver: overlay

volumes:
  gateway_data: null
